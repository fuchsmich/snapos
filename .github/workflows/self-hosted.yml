name: Raspbian-armhf

on: [push, pull_request]

jobs:
  deb:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        image:
          - "buster"

    runs-on: self-hosted-rpi4

    container:
      image: debian:${{matrix.image}}

    steps:
    - name: clean-up
      run: rm -rf /home/pi/actions-runner/_work/snapcast/snap*_armhf.deb
    - name: dependencies
      run: apt-get update && apt-get install -yq wget debhelper build-essential cmake git rename libasound2-dev libsoxr-dev libvorbisidec-dev libvorbis-dev libflac-dev libopus-dev alsa-utils libpulse-dev libavahi-client-dev avahi-daemon libexpat1-dev
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Get Snapcast sha
      run: echo "SHA=$(git -C $GITHUB_WORKSPACE/src/snapcast rev-parse HEAD)" >> $GITHUB_ENV
    - name: cache boost
      id: cache-boost
      uses: actions/cache@v2
      with:
        path: boost_1_78_0
        key: ${{ runner.os }}-boost
    - name: get boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.bz2 && tar xjf boost_1_78_0.tar.bz2
    - name: debian package
      run: |
        fakeroot make -f debian/rules CMAKEFLAGS="-DBOOST_ROOT=$GITHUB_WORKSPACE/boost_1_78_0 -DCMAKE_BUILD_TYPE:STRING=Release -DREVISION=${{ env.SHA }} -DCMAKE_CXX_FLAGS=-DJSON_HAS_CPP_14 -DBUILD_WITH_PULSE=OFF" binary
        rename 's/_armhf/_without-pulse_armhf/g' ../snapclient*_armhf.deb
        fakeroot make -f debian/rules clean
        fakeroot make -f debian/rules CMAKEFLAGS="-DBOOST_ROOT=$GITHUB_WORKSPACE/boost_1_78_0 -DCMAKE_BUILD_TYPE:STRING=Release -DREVISION=${{ env.SHA }} -DCMAKE_CXX_FLAGS=-DJSON_HAS_CPP_14" binary
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: snapcast_armhf-debian-${{matrix.image}}-${{env.SHA}}
        path: /__w/snapos/snap*_armhf.deb
